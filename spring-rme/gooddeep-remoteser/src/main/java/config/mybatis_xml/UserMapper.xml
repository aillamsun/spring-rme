<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gooddeep.remoteser.p_member.mapper.UserMapper">
	<!-- <cache type="com.gooddeep.dev.redis.commons.cache.RedisCache"/> -->
	<resultMap id="BaseResultMap" type="User">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="usable" property="usable" jdbcType="BIT" />
	</resultMap>
	<select id="selectById" resultMap="BaseResultMap">
		select * from user
		where id =
		#{id,jdbcType=VARCHAR}
	</select>


	<delete id="deleteById">
		delete from user
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteBySelect">
		delete from user
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="map.id!=null">
				AND id = #{map.id}
			</if>
			<if test="map.fkUser!=null">
				AND fk_user = #{map.fkUser}
			</if>
		</trim>
	</delete>

	<update id="updateBySelect">
		update user
		<include refid="EX_UPDATE"></include>
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="map.id!=null">
				AND id = #{map.id}
			</if>
			<if test="map.fkUser!=null">
				AND fk_user = #{map.fkUser}
			</if>
		</trim>
	</update>
	<!-- 批量删除 -->
	<update id="deleteBySomeId">
		delete from user where id in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
		<if test="map.fkUser!=null">
			AND fk_user = #{map.fkUser}
		</if>
	</update>


	<select id="list" resultMap="BaseResultMap">
		select * from user
		<trim prefix="WHERE" prefixOverrides="AND | OR">

			<if test="map.email!=null">
				AND email = #{map.email}
			</if>
			<if test="map.account!=null">
				AND account = #{map.account}
			</if>
			<if test="map.password!=null">
				AND password = #{map.password}
			</if>

		</trim>
		order by create_time desc
	</select>


	<select id="findPage" resultMap="BaseResultMap">
		select * from user
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="map.fkUser!=null">
				AND fk_user = #{map.fkUser}
			</if>
		</trim>
		order by create_time desc
		limit #{page.recordNo},#{page.pageSize}
	</select>

	<select id="rowsSize" resultType="int">
		select count(1) from user
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="map.fkUser!=null">
				AND fk_user = #{map.fkUser}
			</if>
		</trim>
	</select>

	<insert id="insert">
		insert into user (id, email, account,
		password, create_time, last_login_time,
		usable)
		values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{lastLoginTime,jdbcType=TIMESTAMP},
		#{usable,jdbcType=BIT})
	</insert>

	<update id="updateById">
		update user
		<include refid="EX_UPDATE"></include>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<sql id="EX_UPDATE">
		<set>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="usable != null">
				usable = #{usable,jdbcType=BIT},
			</if>
		</set>
	</sql>
</mapper>