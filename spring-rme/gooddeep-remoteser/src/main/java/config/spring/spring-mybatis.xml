<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
	default-lazy-init="true">
	<description>Spring-Mybatis配置</description>
	<context:property-placeholder ignore-resource-not-found="false" ignore-unresolvable="true" location="classpath:config/jdbc.properties" />
	
	
	<!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close"> 
  		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="minIdle" value="${jdbc.pool.initialSize}" />
		<property name="initialSize"  value="${jdbc.pool.initialSize}"/>
	   <property name="testWhileIdle"><value>true</value></property>  
		<property name="validationQuery"><value>SELECT 1</value></property>  
		<property name="validationQueryTimeout"  value="10"/>
		<property name="validationInterval"  value="30000"/>

  </bean>  -->
  
 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >         
    <property name="driverClass" value="${jdbc.driver}" />         
    <property name="jdbcUrl" value="${jdbc.url}" />         
    <property name="user" value="root" />         
    <property name="password" value="123456" />         
</bean> 
            
            
 <bean id="paginationInterceptor" class="com.gooddeep.remoteser.commons.interceptor.MybatisInterceptor" />
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
     <!--dataSource属性指定要用到的连接池--> 
     <property name="dataSource" ref="dataSource"/> 
     <!--configLocation属性指定mybatis的核心配置文件--> 
     <property name="configLocation" value="classpath:config/mybatis.xml"/> 
     <property name="mapperLocations" value="classpath*:config/mybatis_xml/*.xml"/>
<!--      <property name="plugins">
			<ref bean="paginationInterceptor" />
	 </property> -->
     
  </bean> 
 	<!-- transaction support -->
	<!-- PlatformTransactionMnager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- enable transaction annotation support -->
	<tx:annotation-driven transaction-manager="txManager" />

  <!-- 全部扫描mapper.xml对应的dao -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
      <property name="basePackage" value="com.gooddeep.remoteser.**.mapper" />  
   </bean> 


	

<!-- order操作AOP配置 -->
<!--  <bean id="recordOpe" class="com.gooddeep.bjcl.commons.helper.OrderRecordAop" />
 
 <aop:config>
  <aop:aspect id="security" ref="recordOpe">
   <aop:pointcut id="add" expression="execution(* com.gooddeep.bjcl.commons.service..*.add(..))"/>
   <aop:pointcut id="delete" expression="execution(* com.gooddeep.bjcl.commons.service..*.removeById(..))"/>
   <aop:pointcut id="update" expression="execution(* com.gooddeep.bjcl.commons.service..*.modifyById(..))"/>
   <aop:after method="writeAddRecord" pointcut-ref="add"/>
   <aop:after method="writeDeleteRecord" pointcut-ref="delete"/>
   <aop:after method="writeUpdateRecord" pointcut-ref="update"/>
  </aop:aspect>
 </aop:config> -->
   

	
</beans>